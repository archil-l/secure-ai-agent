#!/bin/bash

# Load environment variables from project root .env
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$SCRIPT_DIR/.."
if [ -f "$ROOT_DIR/.env" ]; then
  set -o allexport
  source "$ROOT_DIR/.env"
  set +o allexport
fi

cd "$SCRIPT_DIR"

# Generate a 2048-bit RSA private key
openssl genrsa -out private-key.pem 2048

# Convert the private key to PKCS#8 format (traditional, unencrypted)
openssl pkcs8 -in private-key.pem -out private-key-rsa.pem -nocrypt -traditional

echo "Keys generated: private-key.pem and private-key-rsa.pem"

# Create a extract private key from private keys
openssl rsa -in private-key-rsa.pem -pubout -out public-key.pem

echo "Public key generated: public-key.pem"

# Read the keys
PRIVATE_KEY=$(cat private-key-rsa.pem)
PUBLIC_KEY=$(cat public-key.pem)

# Create a JSON object with both keys
JSON_SECRET=$(cat <<EOF
{
  "privateKey": "$PRIVATE_KEY",
  "publicKey": "$PUBLIC_KEY"
}
EOF
)

# Replace newlines with \n for JSON compatibility
JSON_SECRET=$(echo "$JSON_SECRET" | awk '{printf "%s\\n", $0}')

SECRET_NAME="WebSocketAuthKeys"

# Check if the secret exists
aws secretsmanager describe-secret --secret-id "$SECRET_NAME" > /dev/null 2>&1

if [ $? -eq 0 ]; then
  # Secret exists, update it
  aws secretsmanager put-secret-value \
    --secret-id "$SECRET_NAME" \
    --secret-string "$JSON_SECRET"
  echo "Secret updated in AWS Secrets Manager under '$SECRET_NAME'"
else
  # Secret does not exist, create it
  aws secretsmanager create-secret \
    --name "$SECRET_NAME" \
    --secret-string "$JSON_SECRET"
  echo "Secret created in AWS Secrets Manager under '$SECRET_NAME'"
fi

echo "WebSocket authentication keys have been generated and stored in AWS Secrets Manager."
